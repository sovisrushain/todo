{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./hard-coded-auth.service\";\nclass RouteGuardService {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  canActivate(route, state) {\n    if (this.auth.isUserLoggedIn()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function RouteGuardService_Factory(t) {\n    return new (t || RouteGuardService)(i0.ɵɵinject(i1.HardCodedAuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RouteGuardService,\n    factory: RouteGuardService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { RouteGuardService };","map":{"version":3,"names":["RouteGuardService","constructor","auth","canActivate","route","state","isUserLoggedIn","_","i0","ɵɵinject","i1","HardCodedAuthService","_2","factory","ɵfac","providedIn"],"sources":["/media/optimus-prime/blackhole/workstation/full-stack-project/front-end/src/app/service/route-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from \"@angular/router\";\nimport {HardCodedAuthService} from \"./hard-coded-auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  auth: HardCodedAuthService\n\n  constructor(auth: HardCodedAuthService) {\n    this.auth = auth\n  }\n\n  canActivate (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if(this.auth.isUserLoggedIn()){\n      return true\n    } else {\n      return false\n    }\n  }\n}\n\n\n"],"mappings":";;AAIA,MAGaA,iBAAiB;EAI5BC,YAAYC,IAA0B;IACpC,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,WAAWA,CAAEC,KAA6B,EAAEC,KAA0B;IACpE,IAAG,IAAI,CAACH,IAAI,CAACI,cAAc,EAAE,EAAC;MAC5B,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAdUP,iBAAiB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBZ,iBAAiB;IAAAa,OAAA,EAAjBb,iBAAiB,CAAAc,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPf,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}